"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[926],{8106:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=r(4848),i=r(8453);const o={},s="New Project",a={id:"mip_go/develop/new_project",title:"New Project",description:"Finally, it's time to take your very first step towards the implementation",source:"@site/docs/mip_go/5_develop/3_new_project.md",sourceDirName:"mip_go/5_develop",slug:"/mip_go/develop/new_project",permalink:"/mip-start-demo/program/mip_go/develop/new_project",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"mipGoSidebar",previous:{title:"Best Practices",permalink:"/mip-start-demo/program/mip_go/develop/best_practices"},next:{title:"Data Schema",permalink:"/mip-start-demo/program/category/data-schema"}},c={},d=[{value:"Python Console",id:"python-console",level:2},{value:"Adding a README file",id:"adding-a-readme-file",level:2},{value:"Creating a <code>docs</code> subdirectory",id:"creating-a-docs-subdirectory",level:2},{value:"Adding a <code>.gitignore</code>",id:"adding-a-gitignore",level:2},{value:"Adding a subdirectory for testing",id:"adding-a-subdirectory-for-testing",level:2},{value:"Adding a license",id:"adding-a-license",level:2},{value:"Adding a directory for scripts",id:"adding-a-directory-for-scripts",level:2},{value:"Do I really need all this?",id:"do-i-really-need-all-this",level:2}];function l(e){const t={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"new-project",children:"New Project"}),"\n",(0,n.jsx)(t.p,{children:"Finally, it's time to take your very first step towards the implementation\r\nof your new project! Especially if this is your first time creating a\r\nproject from scratch, you should be very excited about it!"}),"\n",(0,n.jsxs)(t.p,{children:["So here is what you need to do:",(0,n.jsx)(t.br,{}),"\n","Go to ",(0,n.jsx)(t.strong,{children:"File > New Project"})," and enter a name for your project.\r\nWe named our project ",(0,n.jsx)(t.code,{children:"mip_me"}),", as in \"It's ",(0,n.jsx)(t.em,{children:"me"})," starting to build\r\n",(0,n.jsx)(t.em,{children:"more intelligence power"}),'". Once you are done, click ',(0,n.jsx)(t.strong,{children:"Create"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Creating a New Project",src:r(6692).A+"",width:"804",height:"629"})}),"\n",(0,n.jsxs)(t.p,{children:["Pycharm will automatically create a ",(0,n.jsx)(t.code,{children:"main.py"})," file with some examples of\r\nwhat you can start doing right away."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"New Project",src:r(6214).A+"",width:"1920",height:"1079"})}),"\n",(0,n.jsxs)(t.p,{children:["You can go ahead and execute the file to see the output in the ",(0,n.jsx)(t.strong,{children:"Run"})," tab\r\nat the bottom."]}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udcdd ",(0,n.jsx)(t.strong,{children:"Tip:"}),"\r\n",(0,n.jsx)(t.em,{children:"There are multiples ways you can execute a file in Pycharm:"})]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.em,{children:"Hit the green triangle at the right-top corner"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.em,{children:"Right-click on the name of the file on the left"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.em,{children:"Right-click anywhere on the file itself (editor)"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsxs)(t.em,{children:["Hit the green triangle next to ",(0,n.jsx)(t.code,{children:"if __name__ == '__main__':"})]})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"python-console",children:"Python Console"}),"\n",(0,n.jsxs)(t.p,{children:["In any project, you can quickly write and execute Python scripts in the\r\nPython Console (tab at the bottom of your screen). To test it out, type in\r\n",(0,n.jsx)(t.code,{children:"import this"})," and hit enter to see ",(0,n.jsx)(t.a,{href:"https://www.python.org/dev/peps/pep-0020/",children:"The Zen of Python"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"adding-a-readme-file",children:"Adding a README file"}),"\n",(0,n.jsxs)(t.p,{children:["The first thing we recommend when you start a new project is to add a\r\n",(0,n.jsx)(t.code,{children:"README"})," file to it. Whether it's a collaborator, a client, a recruiter, or\r\njust a friend, the content of your ",(0,n.jsx)(t.code,{children:"README"})," is the very first thing they\r\nwill look for when they visit the repository of your project. And if the\r\nproject is on GitHub, the content of the ",(0,n.jsx)(t.code,{children:"README"})," is displayed in HTML,\r\nlike when you visit the ",(0,n.jsx)(t.a,{href:"https://github.com/mipwise/mip_go",children:"Mip Go"})," repository."]}),"\n",(0,n.jsxs)(t.p,{children:["To create a ",(0,n.jsx)(t.code,{children:"README"})," file, right-click on the name of your project, i.e.,\r\nat the root of your project directory, and then go to ",(0,n.jsx)(t.strong,{children:"New > File"}),".\r\nThen name it ",(0,n.jsx)(t.code,{children:"README.md"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["\u2754\ufe0f ",(0,n.jsx)(t.strong,{children:"Curiosity"}),(0,n.jsx)(t.br,{}),"\n",(0,n.jsxs)(t.em,{children:["The ",(0,n.jsx)(t.code,{children:"md"})," extension of ",(0,n.jsx)(t.code,{children:"README"})," files is so that GitHub and Pycharm, for\r\ninstance, can recognize it as a Markdown file and compile it accordingly."]})]}),"\n",(0,n.jsxs)(t.p,{children:["Next, put into practice all that you have learned from the ",(0,n.jsx)(t.a,{href:"/mip-start-demo/program/mip_go/documentation/markdown",children:"markdown"}),"\r\nsection and add some cool content to your newly created file.\r\nInclude in your ",(0,n.jsx)(t.code,{children:"README"})," anything you think that might help people\r\n(including yourself in the future) to understand and use whatever you have\r\nbuilt or are going to build."]}),"\n",(0,n.jsxs)(t.h2,{id:"creating-a-docs-subdirectory",children:["Creating a ",(0,n.jsx)(t.code,{children:"docs"})," subdirectory"]}),"\n",(0,n.jsxs)(t.p,{children:["To keep files organized, it's a good idea to create subdirectories within\r\nyour repository. A very common one is the ",(0,n.jsx)(t.code,{children:"docs"})," folder, which helps keep\r\ndocumentation separated from scripts."]}),"\n",(0,n.jsxs)(t.p,{children:["To do that, right-click on the name of your project, i.e., at the root of\r\nyour project directory, and then ",(0,n.jsx)(t.strong,{children:"New > Directory"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["\ud83d\udcdd ",(0,n.jsx)(t.strong,{children:"Tip:"}),"\r\n",(0,n.jsxs)(t.em,{children:["You can add a ",(0,n.jsx)(t.code,{children:"README.md"})," to every single directory and subdirectory of\r\nyour repository. Each of them will get displayed on GitHub as you open the\r\nrespective directory."]})]}),"\n",(0,n.jsxs)(t.h2,{id:"adding-a-gitignore",children:["Adding a ",(0,n.jsx)(t.code,{children:".gitignore"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you are not familiar with version control yet, this might not make much\r\nsense to you. But it's a good practice to add a ",(0,n.jsx)(t.code,{children:".gitignore"})," right away to a\r\nnew repository. It's a file that tells GitHub to not track certain files\r\nthat are irrelevant to whoever is going to collaborate with or use your\r\nproject. A good example is the local files created automatically by Pycharm\r\nand saved to a folder named ",(0,n.jsx)(t.code,{children:".idea"})," inside your project."]}),"\n",(0,n.jsxs)(t.p,{children:["We typically don't create a ",(0,n.jsx)(t.code,{children:".gitignore"})," file from scratch. Instead, we\r\nstart with a generic file for the type of project and edit it later if\r\nneeded. For example, for this project, we are using a ",(0,n.jsx)(t.a,{href:"https://github.com/github/gitignore",children:".gitignore"}),"\r\nthat is generic for Python projects. So you can simply copy it from here and\r\npaste it to the root of your repository."]}),"\n",(0,n.jsx)(t.h2,{id:"adding-a-subdirectory-for-testing",children:"Adding a subdirectory for testing"}),"\n",(0,n.jsxs)(t.p,{children:["If you are building a solution, you will need data to test it. Just like\r\ndocuments, you don't want to mix data files, such as ",(0,n.jsx)(t.code,{children:".cvs"})," and ",(0,n.jsx)(t.code,{children:".xlsx"}),",\r\nwith script files. Therefore, it's also a good practice to create a\r\ndedicated subdirectory. This is also the place where we will keep the unit\r\ntesting code later on."]}),"\n",(0,n.jsxs)(t.p,{children:["There is a naming convention for this type of directory, which is ",(0,n.jsx)(t.code,{children:"test_"}),"\r\nfollowed by the repository name. In our case, it becomes ",(0,n.jsx)(t.code,{children:"test_mip_me"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"So go ahead and create a testing subdirectory for your project even if you\r\ndon't have data yet."}),"\n",(0,n.jsx)(t.h2,{id:"adding-a-license",children:"Adding a license"}),"\n",(0,n.jsxs)(t.p,{children:["Depending on what your project is about, you may also want to add a license.\r\nTechnically it's just a text file named ",(0,n.jsx)(t.code,{children:"LICENSE"}),". But not having a license\r\ncan have big consequences on your project. So we encourage you to have a\r\nlook at the ",(0,n.jsx)(t.a,{href:"https://choosealicense.com/",children:"choosealicense"})," website to learn more."]}),"\n",(0,n.jsx)(t.h2,{id:"adding-a-directory-for-scripts",children:"Adding a directory for scripts"}),"\n",(0,n.jsx)(t.p,{children:"At this point, our directory looks like this:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Repository Structure",src:r(4922).A+"",width:"504",height:"454"})}),"\n",(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"main.py"})," is the only script file that we have. As you\r\nmight guess, any real-world project will likely have multiple script files.\r\nSo it's a good idea to create a subdirectory for them as well. For reasons\r\nthat will become clearer later, we recommend naming this subdirectory with\r\nthe same name of your repository itself, ",(0,n.jsx)(t.code,{children:"mip_me"})," in our case."]}),"\n",(0,n.jsx)(t.p,{children:"So in the end, we have this:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Repository Structure Final",src:r(5727).A+"",width:"503",height:"462"})}),"\n",(0,n.jsxs)(t.p,{children:["You may not realize it, but this is already a big step\r\ntowards being ",(0,n.jsx)(t.a,{href:"/mip-start-demo/program/mip_go/develop/best_practices",children:"OSy"}),"!\r\nIn fact, we are being organized by creating subdirectories and distributing\r\nthe files in a way that makes sense. We are also being systematic by\r\nfollowing standards and conventions."]}),"\n",(0,n.jsx)(t.p,{children:"Perhaps, we can even claim that we are building a tidy solution, although\r\nwe haven't written any code yet."}),"\n",(0,n.jsx)(t.h2,{id:"do-i-really-need-all-this",children:"Do I really need all this?"}),"\n",(0,n.jsxs)(t.p,{children:["You might be wondering: are all these steps above really necessary for my\r\nprojects? Perhaps they are not necessary for your current project.\r\nBut the point is that ",(0,n.jsx)(t.strong,{children:"you are better off setting your standards to what\r\nyou want to achieve and what you want to be"}),", not for what you currently\r\nhave nor what you currently are."]}),"\n",(0,n.jsxs)(t.p,{children:["Sometimes, it might even feel like you are pretending to be a software\r\ndeveloper. It might sound like ",(0,n.jsx)(t.em,{children:'"fake it until you make it"'}),". But that's OK.\r\nAfter all, even The Beatles started their career as a cover band."]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.p,{children:"Next, you will start implementing the schema of your application. And, as a\r\nbonus, you will be getting your solution protected against dirty data!"})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},6692:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/creating_new_project-7822be7d0d86ca38682c981ae7ed92ae.png"},6214:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/new_project-8e28773e045599036faaa37b2f30403e.png"},4922:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/repo_structure-50c22eb2783bf279f24916d8480674c2.png"},5727:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/repo_structure_final-f7845ec8a38fc304aef9974b95ed4a3e.png"},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var n=r(6540);const i={},o=n.createContext(i);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);