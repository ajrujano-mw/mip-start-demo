"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2780],{5440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(4848),i=n(8453);const o={sidebar_position:5},r="Data Validation",s={id:"mip_go/define/data_validation",title:"Data Validation",description:"Bad data can easily yield wrong results even through well-written code.",source:"@site/docs/mip_go/4_define/4_data_validation.md",sourceDirName:"mip_go/4_define",slug:"/mip_go/define/data_validation",permalink:"/mip-start-demo/program/mip_go/define/data_validation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"mipGoSidebar",previous:{title:"Development Instance",permalink:"/mip-start-demo/program/mip_go/define/development_instance"},next:{title:"Modeling",permalink:"/mip-start-demo/program/mip_go/define/modeling"}},d={},c=[];function l(e){const t={a:"a",em:"em",h1:"h1",hr:"hr",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"data-validation",children:"Data Validation"}),"\n",(0,a.jsx)(t.p,{children:"Bad data can easily yield wrong results even through well-written code.\r\nTherefore, to be reliable, a solution must be able to catch bad data before\r\nit reaches the solution engine."}),"\n",(0,a.jsx)(t.p,{children:"The best place to catch and handle bad data is right in the input schema.\r\nBut to achieve that, in addition to primary keys, we need to establish\r\nrelationships between tables via foreign key constraints, precisely define\r\nthe data type of every column, and define additional data predicates when\r\nappropriate."}),"\n",(0,a.jsx)(t.p,{children:"The key idea here is to be as precise as you can about what you expect the\r\ndata to look like. This is opposed to guessing what can go wrong with the\r\ndata and adding catches for each exception."}),"\n",(0,a.jsx)(t.p,{children:"But how can we implement this in Python?"}),"\n",(0,a.jsxs)(t.p,{children:["There is a fantastic Python package called ",(0,a.jsx)(t.a,{href:"https://pypi.org/project/ticdat/",children:"ticdat"})," that\r\nautomates most of the work for us and is fairly simple to use!"]}),"\n",(0,a.jsxs)(t.p,{children:["A lot more information about data validation and best practices can be\r\nfound in the ",(0,a.jsx)(t.a,{href:"https://github.com/ticdat/ticdat/wiki",children:"ticdat Wiki"})," on GitHub."]}),"\n",(0,a.jsxs)(t.p,{children:["In the ",(0,a.jsx)(t.em,{children:"Develop"})," module, you will see how to implement data schemas using\r\nticdat. But before that, there are a few more things that we need to review."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.p,{children:"Next we are going to learn about modeling."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var a=n(6540);const i={},o=a.createContext(i);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);