"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9528],{1105:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=n(4848),r=n(8453);const i={sidebar_position:2},l="Data",a={id:"mip_go/define/data",title:"Data",description:"If we are going to solve problems by combining data and algorithms, then",source:"@site/docs/mip_go/4_define/1_data.md",sourceDirName:"mip_go/4_define",slug:"/mip_go/define/data",permalink:"/mip-start-demo/program/mip_go/define/data",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"mipGoSidebar",previous:{title:"Overview",permalink:"/mip-start-demo/program/mip_go/define/welcome"},next:{title:"Data Schemas",permalink:"/mip-start-demo/program/mip_go/define/data_schemas"}},o={},d=[{value:"Structures",id:"structures",level:2},{value:"Tables",id:"tables",level:2},{value:"Primary keys",id:"primary-keys",level:3},{value:"Foreign keys",id:"foreign-keys",level:3}];function c(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"data",children:"Data"}),"\n",(0,s.jsx)(t.p,{children:"If we are going to solve problems by combining data and algorithms, then\r\nknowing how to define and manipulate data is obviously a very important\r\nskill to develop. Data manipulation is a broad topic, so we will focus on\r\nthe aspects that are most relevant to our context."}),"\n",(0,s.jsx)(t.h2,{id:"structures",children:"Structures"}),"\n",(0,s.jsx)(t.p,{children:"The standard way to organize and store data is in the form of tables\r\n(though not always the most efficient way). Among the reasons for that is\r\nthe fact that tables are human-readable."}),"\n",(0,s.jsx)(t.p,{children:"In Python, tables are typically cast as Pandas data frames after the data is\r\nloaded from spreadsheets, CSV files, databases, etc. You will understand why\r\nis that once we start to learn more about Pandas later in the program."}),"\n",(0,s.jsx)(t.p,{children:"To be used in the code, however, the data may have to be decomposed into\r\nother structures, such as lists, sets, tuples, or mappings/dictionaries.\r\nFor example, data frames are often suitable for descriptive analytics projects\r\nbut lists and dictionaries are much easier to work with while building\r\noptimization models. Also, for more complex problems it may be a good idea\r\nto define classes and customized objects."}),"\n",(0,s.jsx)(t.h2,{id:"tables",children:"Tables"}),"\n",(0,s.jsx)(t.p,{children:"Since we will be talking about tables quite a lot from now on, it's a good\r\nidea to introduce/review a few concepts about tables."}),"\n",(0,s.jsxs)(t.p,{children:["Tables have rows and columns. The first row is a special one which is\r\ncalled ",(0,s.jsx)(t.em,{children:"header"})," and hosts the names of the columns. All the other rows host\r\ndata."]}),"\n",(0,s.jsx)(t.p,{children:"Each column has a name and, ideally, holds data on one type only. For\r\nexample, if you see that the first few entries of a column contain text, you\r\nwould expect that the whole column contains only text. If that is not the\r\ncase, you may have problems when you start using this data with your solution."}),"\n",(0,s.jsx)(t.p,{children:"The following are two simple examples of tables."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Table name: ",(0,s.jsx)(t.code,{children:"sites"})]})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Site ID"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Site Name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Latitude"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Longitude"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Depot"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-27.600839"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-48.635966"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Store Downtown"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-27.596883"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-48.553225"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"Store Midtown"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-27.590798"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"-48.504130"})]})]})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.strong,{children:["Table name: ",(0,s.jsx)(t.code,{children:"transit_matrix"})]})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Origin Site ID"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Dest. Site ID"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Distance (KM)"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Transit Time"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"25.4"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0:46:00"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"32.2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"1:06:00"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"23.0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0:32:00"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"8.8"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0:16:00"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S0"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"31.7"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0:32:00"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S2"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"S1"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"8.9"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"0:17:00"})]})]})]}),"\n",(0,s.jsxs)(t.p,{children:["There is probably nothing new for you until this point. What people are not\r\nso familiar with are the concepts of ",(0,s.jsx)(t.em,{children:"primary keys"})," and ",(0,s.jsx)(t.em,{children:"foreign keys"})," of a\r\ntable."]}),"\n",(0,s.jsx)(t.h3,{id:"primary-keys",children:"Primary keys"}),"\n",(0,s.jsx)(t.p,{children:"Primary keys are the values that uniquely identify its row. And all primary\r\nkeys come from the same column or the same set of columns."}),"\n",(0,s.jsxs)(t.p,{children:["For example, in the ",(0,s.jsx)(t.code,{children:"sites"})," table above, the ",(0,s.jsx)(t.strong,{children:"Site ID"})," column can be set\r\nas the ",(0,s.jsx)(t.em,{children:"primary key"})," because its values, S0, S1, and S2, can be used to\r\nuniquely identify their respective rows. All the other columns in the\r\n",(0,s.jsx)(t.code,{children:"sites"})," table are then classified as ",(0,s.jsx)(t.em,{children:"data columns"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["In the case of the ",(0,s.jsx)(t.code,{children:"transit_matrix"})," table, we need two columns to define\r\nprimary keys, they are ",(0,s.jsx)(t.strong,{children:"Origin Site ID"})," and ",(0,s.jsx)(t.strong,{children:"Dest. Site ID"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"foreign-keys",children:"Foreign keys"}),"\n",(0,s.jsx)(t.p,{children:"The role of foreign keys is to establish relationships between tables.\r\nPerhaps the most common example is foreign key constraints."}),"\n",(0,s.jsxs)(t.p,{children:["For example, it's probably a good idea to ensure that every\r\nsite ID that we encounter in the ",(0,s.jsx)(t.strong,{children:"Origin Site ID"})," and ",(0,s.jsx)(t.strong,{children:"Dest. Site ID"}),"\r\ncolumns is one of the primary keys of the ",(0,s.jsx)(t.code,{children:"sites"})," table.\r\nThat way, if we want to retrieve the name or location of the sites\r\nin the ",(0,s.jsx)(t.code,{children:"transit_matrix"})," table, we can safely merge the two tables."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function l(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);